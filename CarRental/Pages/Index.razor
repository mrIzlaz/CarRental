@page "/"
@using CarRental.Common.Classes;
@using CarRental.Data.Interfaces
@using CarRental.Data.Classes
@using CarRental.Business.Classes
@using CarRental.Common.Enums
@using CarRental.Common.Interfaces
@inject BookingProcessor bp
@inject HttpClient Http

<PageTitle>Car Rental</PageTitle>

<h1>Car Rental Assignment G</h1>

<p>@debugMessage</p>
@*<button class="btn btn-primary" @onclick="IncrementCount">Increase!</button>*@

<h3>Vehicles</h3>
<div class="d-flex">
    @*<div><button class="btn btn-primary" @onclick="ShowAvailable">Show Available</button> </div>*@
    <div class="form-check-inline">
        <input class="form-check-input" type="radio" name="flexRadioDefault" id="flexRadioDefault2" checked @onclick="ShowAll">
        <label class="form-check-label" for="flexRadioDefault2">
            Show All
        </label>
    </div>
    <div class="form-check-inline">
        <input class="form-check-input" type="radio" name="flexRadioDefault" id="flexRadioDefault1" @onclick="ShowBooked">
        <label class="form-check-label" for="flexRadioDefault1">
            Only Booked
        </label>
    </div>   <div class="form-check-inline">
        <input class="form-check-input" type="radio" name="flexRadioDefault" id="flexRadioDefault1" @onclick="ShowAvailable">
        <label class="form-check-label" for="flexRadioDefault1">
            Only Available
        </label>
    </div>
</div>

@if (bp == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table table-striped table-hover w-80">
        <thead>
            <tr class="align-items-baseline">
                <th>RegNo.</th>
                <th>Make</th>
                <th>Odometer</th>
                <th>Cost Km</th>
                <th>Vehicle Type</th>
                <th>$ Day</th>
                <th>Status</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var vehicleInfo in bp.GetVehicles(visibleVehicle))
            {
                <tr>
                    <td><strong>@vehicleInfo.GetLicencePlate()</strong></td>
                    <td>@vehicleInfo.GetManufacturer()</td>
                    <td>@vehicleInfo.GetOdometer()</td>
                    <td>@vehicleInfo.GetKmCost() $/km</td>
                    <td>@vehicleInfo.GetVehicleType().ToString()</td>
                    <td>@vehicleInfo.GetDayCost() $/d</td>
                    <td class="align-items-center"><span class="badge rounded-pill @(GetVehicleStatusTag(vehicleInfo.GetVehicleStatus()))">@vehicleInfo.GetVehicleStatus().ToString()</span></td>
                </tr>
            }
        </tbody>
    </table>
    <br />
}


<h3>Bookings</h3>
@if (bp == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table table-striped table-hover w-80">
        <thead>
            <tr class="align-items-baseline">
                <th>RegNo.</th>
                <th>Customer</th>
                <th>Start Km</th>
                <th>Return Km</th>
                <th>Rent Date</th>
                <th>Return Date</th>
                <th>Total Cost $</th>
                <th>Status</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var bookingInfo in bp.GetBookings())
            {
                <tr>
                    <td><strong>@bookingInfo.LicensePlate()</strong></td>
                    <td>@bookingInfo.CustomerName()</td>
                    <td>@bookingInfo.GetOdometerStart()</td>
                    <td>@(bookingInfo.IsBookingActive() ? "" : @bookingInfo.GetOdometerReturn()) </td>
                    <td>@bookingInfo.GetStartDate().ToShortDateString()</td>
                    <td>@(bookingInfo.IsBookingActive() ? "" : @bookingInfo.GetReturnDate()?.ToShortDateString())</td>
                    <td>@(bookingInfo.IsBookingActive() ? "" : @bookingInfo.GetTotalCost() + " $")</td>
                    <td class="align-items-center"><span class="badge @GetBookingStatusTag(bookingInfo.GetBookingStatus()) ">@(GetBookingStatusLabel(bookingInfo.GetBookingStatus()))</span></td>
                </tr>
            }
        </tbody>
    </table>
    <br />
}
<h3>Customers</h3>
@if (bp == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table table-striped table-hover w-50">
        <thead>
            <tr class="align-items-baseline">
                <th>SSN</th>
                <th>Last Name</th>
                <th>First Name</th>
                <th>Registry Date</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var customerInfo in bp.GetCustomers())
            {
                <tr>
                    <td><strong>@customerInfo.GetSecurityFormated(true)</strong></td>
                    <td>@customerInfo.GetLastname()</td>
                    <td>@customerInfo.GetFirstname()</td>
                    <td>@customerInfo.RegistryDate.ToShortDateString()</td>
                </tr>
            }
        </tbody>
    </table>
}



@code {


    string debugMessage = "";

    private VehicleStatus visibleVehicle = default;
    public void ShowAvailable() => visibleVehicle = VehicleStatus.Available;
    public void ShowBooked() => visibleVehicle = VehicleStatus.Booked;
    public void ShowAll() => visibleVehicle = default;

    public string GetVehicleStatusTag(VehicleStatus status)
    {
        switch (status)
        {
            case VehicleStatus.Booked:
                return "text-bg-danger";
            case VehicleStatus.Available:
                return "text-bg-success";
            case VehicleStatus.Unavailable:
                return "text-bg-dark";
        }
        return "";
    }

    public string GetBookingStatusTag(VehicleStatus status)
    {
        switch (status)
        {
            case VehicleStatus.Booked:
                return "text-bg-danger";
            case VehicleStatus.Available:
                return "text-bg-success";
            case VehicleStatus.Unavailable:
                return "text-bg-dark";
        }
        return "";
    }

    public string GetBookingStatusLabel(VehicleStatus status)
    {

        switch (status)
        {
            case VehicleStatus.Booked:
                return "Open";
            case VehicleStatus.Available:
                return "Closed";
            case VehicleStatus.Unavailable:
                return "Maintenance";
        }
        return "";
    }

}
